//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace NAVExtracter.NETConductor {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicsSoap", Namespace="http://www.ruedenet.com/NC.MiddleTier/Basics/")]
    public partial class Basics : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RunCodeUnitOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunCodeUnitWithXMLParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectFromTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectFromTableExOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyInTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyManyInTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFromTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteManyFromTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableDefinitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunCodeUnitModelessOperationCompleted;
        
        private System.Threading.SendOrPostCallback XmlPortOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback XmlPortInOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Basics() {
            this.Url = global::NAVExtracter.Properties.Settings.Default.NAVExtracter_NETConductor_Basics;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RunCodeUnitCompletedEventHandler RunCodeUnitCompleted;
        
        /// <remarks/>
        public event RunCodeUnitWithXMLParameterCompletedEventHandler RunCodeUnitWithXMLParameterCompleted;
        
        /// <remarks/>
        public event SelectFromTableCompletedEventHandler SelectFromTableCompleted;
        
        /// <remarks/>
        public event SelectFromTableExCompletedEventHandler SelectFromTableExCompleted;
        
        /// <remarks/>
        public event InsertIntoTableCompletedEventHandler InsertIntoTableCompleted;
        
        /// <remarks/>
        public event ModifyInTableCompletedEventHandler ModifyInTableCompleted;
        
        /// <remarks/>
        public event ModifyManyInTableCompletedEventHandler ModifyManyInTableCompleted;
        
        /// <remarks/>
        public event DeleteFromTableCompletedEventHandler DeleteFromTableCompleted;
        
        /// <remarks/>
        public event DeleteManyFromTableCompletedEventHandler DeleteManyFromTableCompleted;
        
        /// <remarks/>
        public event RunReportCompletedEventHandler RunReportCompleted;
        
        /// <remarks/>
        public event GetTableDefinitionCompletedEventHandler GetTableDefinitionCompleted;
        
        /// <remarks/>
        public event RunCodeUnitModelessCompletedEventHandler RunCodeUnitModelessCompleted;
        
        /// <remarks/>
        public event XmlPortOutCompletedEventHandler XmlPortOutCompleted;
        
        /// <remarks/>
        public event XmlPortInCompletedEventHandler XmlPortInCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/RunCodeUnit", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RunCodeUnit(string serviceName, int no, string parameters) {
            object[] results = this.Invoke("RunCodeUnit", new object[] {
                        serviceName,
                        no,
                        parameters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RunCodeUnitAsync(string serviceName, int no, string parameters) {
            this.RunCodeUnitAsync(serviceName, no, parameters, null);
        }
        
        /// <remarks/>
        public void RunCodeUnitAsync(string serviceName, int no, string parameters, object userState) {
            if ((this.RunCodeUnitOperationCompleted == null)) {
                this.RunCodeUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunCodeUnitOperationCompleted);
            }
            this.InvokeAsync("RunCodeUnit", new object[] {
                        serviceName,
                        no,
                        parameters}, this.RunCodeUnitOperationCompleted, userState);
        }
        
        private void OnRunCodeUnitOperationCompleted(object arg) {
            if ((this.RunCodeUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunCodeUnitCompleted(this, new RunCodeUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/RunCodeUnitWithXMLParameter", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RunCodeUnitWithXMLParameter(string serviceName, int no, System.Xml.XmlNode xmlParameter) {
            object[] results = this.Invoke("RunCodeUnitWithXMLParameter", new object[] {
                        serviceName,
                        no,
                        xmlParameter});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RunCodeUnitWithXMLParameterAsync(string serviceName, int no, System.Xml.XmlNode xmlParameter) {
            this.RunCodeUnitWithXMLParameterAsync(serviceName, no, xmlParameter, null);
        }
        
        /// <remarks/>
        public void RunCodeUnitWithXMLParameterAsync(string serviceName, int no, System.Xml.XmlNode xmlParameter, object userState) {
            if ((this.RunCodeUnitWithXMLParameterOperationCompleted == null)) {
                this.RunCodeUnitWithXMLParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunCodeUnitWithXMLParameterOperationCompleted);
            }
            this.InvokeAsync("RunCodeUnitWithXMLParameter", new object[] {
                        serviceName,
                        no,
                        xmlParameter}, this.RunCodeUnitWithXMLParameterOperationCompleted, userState);
        }
        
        private void OnRunCodeUnitWithXMLParameterOperationCompleted(object arg) {
            if ((this.RunCodeUnitWithXMLParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunCodeUnitWithXMLParameterCompleted(this, new RunCodeUnitWithXMLParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/SelectFromTable", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SelectFromTable(string serviceName, int table, string cols, string filter, string sorting) {
            object[] results = this.Invoke("SelectFromTable", new object[] {
                        serviceName,
                        table,
                        cols,
                        filter,
                        sorting});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SelectFromTableAsync(string serviceName, int table, string cols, string filter, string sorting) {
            this.SelectFromTableAsync(serviceName, table, cols, filter, sorting, null);
        }
        
        /// <remarks/>
        public void SelectFromTableAsync(string serviceName, int table, string cols, string filter, string sorting, object userState) {
            if ((this.SelectFromTableOperationCompleted == null)) {
                this.SelectFromTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectFromTableOperationCompleted);
            }
            this.InvokeAsync("SelectFromTable", new object[] {
                        serviceName,
                        table,
                        cols,
                        filter,
                        sorting}, this.SelectFromTableOperationCompleted, userState);
        }
        
        private void OnSelectFromTableOperationCompleted(object arg) {
            if ((this.SelectFromTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectFromTableCompleted(this, new SelectFromTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/SelectFromTableEx", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SelectFromTableEx(string serviceName, int table, string cols, string filter, string sorting, string calcs, string blobs, int from, int to, int verbosity, bool definition) {
            object[] results = this.Invoke("SelectFromTableEx", new object[] {
                        serviceName,
                        table,
                        cols,
                        filter,
                        sorting,
                        calcs,
                        blobs,
                        from,
                        to,
                        verbosity,
                        definition});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SelectFromTableExAsync(string serviceName, int table, string cols, string filter, string sorting, string calcs, string blobs, int from, int to, int verbosity, bool definition) {
            this.SelectFromTableExAsync(serviceName, table, cols, filter, sorting, calcs, blobs, from, to, verbosity, definition, null);
        }
        
        /// <remarks/>
        public void SelectFromTableExAsync(string serviceName, int table, string cols, string filter, string sorting, string calcs, string blobs, int from, int to, int verbosity, bool definition, object userState) {
            if ((this.SelectFromTableExOperationCompleted == null)) {
                this.SelectFromTableExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectFromTableExOperationCompleted);
            }
            this.InvokeAsync("SelectFromTableEx", new object[] {
                        serviceName,
                        table,
                        cols,
                        filter,
                        sorting,
                        calcs,
                        blobs,
                        from,
                        to,
                        verbosity,
                        definition}, this.SelectFromTableExOperationCompleted, userState);
        }
        
        private void OnSelectFromTableExOperationCompleted(object arg) {
            if ((this.SelectFromTableExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectFromTableExCompleted(this, new SelectFromTableExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/InsertIntoTable", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InsertIntoTable(string serviceName, int table, string values, bool validation) {
            object[] results = this.Invoke("InsertIntoTable", new object[] {
                        serviceName,
                        table,
                        values,
                        validation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InsertIntoTableAsync(string serviceName, int table, string values, bool validation) {
            this.InsertIntoTableAsync(serviceName, table, values, validation, null);
        }
        
        /// <remarks/>
        public void InsertIntoTableAsync(string serviceName, int table, string values, bool validation, object userState) {
            if ((this.InsertIntoTableOperationCompleted == null)) {
                this.InsertIntoTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoTableOperationCompleted);
            }
            this.InvokeAsync("InsertIntoTable", new object[] {
                        serviceName,
                        table,
                        values,
                        validation}, this.InsertIntoTableOperationCompleted, userState);
        }
        
        private void OnInsertIntoTableOperationCompleted(object arg) {
            if ((this.InsertIntoTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoTableCompleted(this, new InsertIntoTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/ModifyInTable", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyInTable(string serviceName, int table, string primarykey, string values, bool validation) {
            object[] results = this.Invoke("ModifyInTable", new object[] {
                        serviceName,
                        table,
                        primarykey,
                        values,
                        validation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyInTableAsync(string serviceName, int table, string primarykey, string values, bool validation) {
            this.ModifyInTableAsync(serviceName, table, primarykey, values, validation, null);
        }
        
        /// <remarks/>
        public void ModifyInTableAsync(string serviceName, int table, string primarykey, string values, bool validation, object userState) {
            if ((this.ModifyInTableOperationCompleted == null)) {
                this.ModifyInTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyInTableOperationCompleted);
            }
            this.InvokeAsync("ModifyInTable", new object[] {
                        serviceName,
                        table,
                        primarykey,
                        values,
                        validation}, this.ModifyInTableOperationCompleted, userState);
        }
        
        private void OnModifyInTableOperationCompleted(object arg) {
            if ((this.ModifyInTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyInTableCompleted(this, new ModifyInTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/ModifyManyInTable", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ModifyManyInTable(string serviceName, int table, int key, string filter, string values, bool validation) {
            object[] results = this.Invoke("ModifyManyInTable", new object[] {
                        serviceName,
                        table,
                        key,
                        filter,
                        values,
                        validation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyManyInTableAsync(string serviceName, int table, int key, string filter, string values, bool validation) {
            this.ModifyManyInTableAsync(serviceName, table, key, filter, values, validation, null);
        }
        
        /// <remarks/>
        public void ModifyManyInTableAsync(string serviceName, int table, int key, string filter, string values, bool validation, object userState) {
            if ((this.ModifyManyInTableOperationCompleted == null)) {
                this.ModifyManyInTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyManyInTableOperationCompleted);
            }
            this.InvokeAsync("ModifyManyInTable", new object[] {
                        serviceName,
                        table,
                        key,
                        filter,
                        values,
                        validation}, this.ModifyManyInTableOperationCompleted, userState);
        }
        
        private void OnModifyManyInTableOperationCompleted(object arg) {
            if ((this.ModifyManyInTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyManyInTableCompleted(this, new ModifyManyInTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/DeleteFromTable", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteFromTable(string serviceName, int table, string primarykey, bool validation) {
            object[] results = this.Invoke("DeleteFromTable", new object[] {
                        serviceName,
                        table,
                        primarykey,
                        validation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFromTableAsync(string serviceName, int table, string primarykey, bool validation) {
            this.DeleteFromTableAsync(serviceName, table, primarykey, validation, null);
        }
        
        /// <remarks/>
        public void DeleteFromTableAsync(string serviceName, int table, string primarykey, bool validation, object userState) {
            if ((this.DeleteFromTableOperationCompleted == null)) {
                this.DeleteFromTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFromTableOperationCompleted);
            }
            this.InvokeAsync("DeleteFromTable", new object[] {
                        serviceName,
                        table,
                        primarykey,
                        validation}, this.DeleteFromTableOperationCompleted, userState);
        }
        
        private void OnDeleteFromTableOperationCompleted(object arg) {
            if ((this.DeleteFromTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFromTableCompleted(this, new DeleteFromTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/DeleteManyFromTable", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteManyFromTable(string serviceName, int table, int key, string filter, bool validation) {
            object[] results = this.Invoke("DeleteManyFromTable", new object[] {
                        serviceName,
                        table,
                        key,
                        filter,
                        validation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteManyFromTableAsync(string serviceName, int table, int key, string filter, bool validation) {
            this.DeleteManyFromTableAsync(serviceName, table, key, filter, validation, null);
        }
        
        /// <remarks/>
        public void DeleteManyFromTableAsync(string serviceName, int table, int key, string filter, bool validation, object userState) {
            if ((this.DeleteManyFromTableOperationCompleted == null)) {
                this.DeleteManyFromTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteManyFromTableOperationCompleted);
            }
            this.InvokeAsync("DeleteManyFromTable", new object[] {
                        serviceName,
                        table,
                        key,
                        filter,
                        validation}, this.DeleteManyFromTableOperationCompleted, userState);
        }
        
        private void OnDeleteManyFromTableOperationCompleted(object arg) {
            if ((this.DeleteManyFromTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteManyFromTableCompleted(this, new DeleteManyFromTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/RunReport", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RunReport(string serviceName, int no, string parameters, string replytype) {
            object[] results = this.Invoke("RunReport", new object[] {
                        serviceName,
                        no,
                        parameters,
                        replytype});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RunReportAsync(string serviceName, int no, string parameters, string replytype) {
            this.RunReportAsync(serviceName, no, parameters, replytype, null);
        }
        
        /// <remarks/>
        public void RunReportAsync(string serviceName, int no, string parameters, string replytype, object userState) {
            if ((this.RunReportOperationCompleted == null)) {
                this.RunReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunReportOperationCompleted);
            }
            this.InvokeAsync("RunReport", new object[] {
                        serviceName,
                        no,
                        parameters,
                        replytype}, this.RunReportOperationCompleted, userState);
        }
        
        private void OnRunReportOperationCompleted(object arg) {
            if ((this.RunReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunReportCompleted(this, new RunReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/GetTableDefinition", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetTableDefinition(string serviceName, int table) {
            object[] results = this.Invoke("GetTableDefinition", new object[] {
                        serviceName,
                        table});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableDefinitionAsync(string serviceName, int table) {
            this.GetTableDefinitionAsync(serviceName, table, null);
        }
        
        /// <remarks/>
        public void GetTableDefinitionAsync(string serviceName, int table, object userState) {
            if ((this.GetTableDefinitionOperationCompleted == null)) {
                this.GetTableDefinitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDefinitionOperationCompleted);
            }
            this.InvokeAsync("GetTableDefinition", new object[] {
                        serviceName,
                        table}, this.GetTableDefinitionOperationCompleted, userState);
        }
        
        private void OnGetTableDefinitionOperationCompleted(object arg) {
            if ((this.GetTableDefinitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableDefinitionCompleted(this, new GetTableDefinitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/RunCodeUnitModeless", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RunCodeUnitModeless(string serviceName, int no, string parameters) {
            object[] results = this.Invoke("RunCodeUnitModeless", new object[] {
                        serviceName,
                        no,
                        parameters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RunCodeUnitModelessAsync(string serviceName, int no, string parameters) {
            this.RunCodeUnitModelessAsync(serviceName, no, parameters, null);
        }
        
        /// <remarks/>
        public void RunCodeUnitModelessAsync(string serviceName, int no, string parameters, object userState) {
            if ((this.RunCodeUnitModelessOperationCompleted == null)) {
                this.RunCodeUnitModelessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunCodeUnitModelessOperationCompleted);
            }
            this.InvokeAsync("RunCodeUnitModeless", new object[] {
                        serviceName,
                        no,
                        parameters}, this.RunCodeUnitModelessOperationCompleted, userState);
        }
        
        private void OnRunCodeUnitModelessOperationCompleted(object arg) {
            if ((this.RunCodeUnitModelessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunCodeUnitModelessCompleted(this, new RunCodeUnitModelessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/XmlPortOut", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode XmlPortOut(string serviceName, int no, string parameters) {
            object[] results = this.Invoke("XmlPortOut", new object[] {
                        serviceName,
                        no,
                        parameters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void XmlPortOutAsync(string serviceName, int no, string parameters) {
            this.XmlPortOutAsync(serviceName, no, parameters, null);
        }
        
        /// <remarks/>
        public void XmlPortOutAsync(string serviceName, int no, string parameters, object userState) {
            if ((this.XmlPortOutOperationCompleted == null)) {
                this.XmlPortOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXmlPortOutOperationCompleted);
            }
            this.InvokeAsync("XmlPortOut", new object[] {
                        serviceName,
                        no,
                        parameters}, this.XmlPortOutOperationCompleted, userState);
        }
        
        private void OnXmlPortOutOperationCompleted(object arg) {
            if ((this.XmlPortOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XmlPortOutCompleted(this, new XmlPortOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ruedenet.com/NC.MiddleTier/Basics/XmlPortIn", RequestNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", ResponseNamespace="http://www.ruedenet.com/NC.MiddleTier/Basics/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode XmlPortIn(string serviceName, int no, System.Xml.XmlNode xmlParameter) {
            object[] results = this.Invoke("XmlPortIn", new object[] {
                        serviceName,
                        no,
                        xmlParameter});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void XmlPortInAsync(string serviceName, int no, System.Xml.XmlNode xmlParameter) {
            this.XmlPortInAsync(serviceName, no, xmlParameter, null);
        }
        
        /// <remarks/>
        public void XmlPortInAsync(string serviceName, int no, System.Xml.XmlNode xmlParameter, object userState) {
            if ((this.XmlPortInOperationCompleted == null)) {
                this.XmlPortInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXmlPortInOperationCompleted);
            }
            this.InvokeAsync("XmlPortIn", new object[] {
                        serviceName,
                        no,
                        xmlParameter}, this.XmlPortInOperationCompleted, userState);
        }
        
        private void OnXmlPortInOperationCompleted(object arg) {
            if ((this.XmlPortInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XmlPortInCompleted(this, new XmlPortInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RunCodeUnitCompletedEventHandler(object sender, RunCodeUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunCodeUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunCodeUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RunCodeUnitWithXMLParameterCompletedEventHandler(object sender, RunCodeUnitWithXMLParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunCodeUnitWithXMLParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunCodeUnitWithXMLParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectFromTableCompletedEventHandler(object sender, SelectFromTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectFromTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectFromTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SelectFromTableExCompletedEventHandler(object sender, SelectFromTableExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectFromTableExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectFromTableExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void InsertIntoTableCompletedEventHandler(object sender, InsertIntoTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertIntoTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertIntoTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ModifyInTableCompletedEventHandler(object sender, ModifyInTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyInTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyInTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ModifyManyInTableCompletedEventHandler(object sender, ModifyManyInTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyManyInTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyManyInTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFromTableCompletedEventHandler(object sender, DeleteFromTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFromTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFromTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteManyFromTableCompletedEventHandler(object sender, DeleteManyFromTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteManyFromTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteManyFromTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RunReportCompletedEventHandler(object sender, RunReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetTableDefinitionCompletedEventHandler(object sender, GetTableDefinitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableDefinitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableDefinitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RunCodeUnitModelessCompletedEventHandler(object sender, RunCodeUnitModelessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunCodeUnitModelessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunCodeUnitModelessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void XmlPortOutCompletedEventHandler(object sender, XmlPortOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XmlPortOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XmlPortOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void XmlPortInCompletedEventHandler(object sender, XmlPortInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XmlPortInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XmlPortInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591